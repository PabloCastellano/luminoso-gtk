Luminoso-gtk es una reimplementación de un software para programar un panel de 16x64 leds.

La versión con la que contábamos solo funciona bajo una versión antigua de Windows y no disponíamos de su código fuente.
En cambio esta versión está desarrollada bajo licencia GPLv3 y usando la librería gráfica GTK+ sobre Python.

== Funcionamiento ==
El software original incorpora varios algoritmos y varios "tipos de pantalla":
Tipos de pantalla: imagen, frase 1 línea, frase 2 líneas, frase larga
Algoritmos: aparición, estático, palpitación, parpadeo, rotación

Una animación está compuesta de varios tipos de pantallas y cada tipo de pantalla tiene un algoritmo asociado.
En el caso de "Frase larga" el algoritmo asociado es Rotación y no puede ser otro.
El resto de tipos de pantalla permiten usar cualquiera de los 5 algoritmos sin ninguna restricción.

Aparición:
Estático: requiere el número de segundos que se quedará estática la imagen
Palpitación:
Parpadeo:
Rotación: desplaza a la izquierda la imagen y reaparece por la derecha y nº de veces especificado.

== Tipos de fichero  ==
Luminoso maneja varios tipos de archivos:
.iat -> Ficheros de imagen

Son archivos de 128 bytes (64x2). Aunque también los he visto de 256.
Y hasta alguno de 257, 258, 130 y 539!?!

.fun -> fuentes

Estos archivos contienen la representación de los caracteres en el panel de leds.
En binario codifican normalmente con 5 bytes qué leds se encienden y qué leds permanecen apagados para representar un carácter.

Tenemos distintos archivos .fun, que se usan según el tipo de letra que elijamos al crear un tipo de pantalla de tipo frase:
Para frases de una línea se usan: "Cursiva.fun" "Especial.fun" "Negrita.fun" "Normal.fun"
Para frases de dos líneas se usa "twoline.fun"
Hay otros dos archivos que aparentemente no se usan: "Linea1.fun" "Linea2.fun"

Probablemente lo mejor es en un futuro prescindir de estos archivos e incorporar sus representaciones en alguna clase Python

.fa1 -> Ficheros de frases1
.fa2 -> Ficheros de frases2

Son archivos de 256 bytes

Parece que son los 128 bytes iniciales repetidos

.atr -> Ficheros de animación

for i in `f atr`; do xxd -b $i; done
0000000: 00000000 00111101 00000000 00001110                    .=..
0000000: 00000000 01010100 00000000 00010011                    .T..
0000000: 00000000 01011101 00000000 00010110                    .]..
0000000: 00000000 10001010 00000000 00101111                    .../
0000000: 00000000 01011110 00000000 00011111                    .^..
0000000: 00000000 01110010 00000000 00101000                    .r.(
0000000: 00000000 01010111 00000000 00011101                    .W..
0000000: 00000000 01111010 00000000 00101101                    .z.-
0000000: 00000000 01101101 00000000 00101010                    .m.*
0000000: 00000000 10001010 00000000 00101111                    .../
0000000: 00000000 00011010 00000000 00001001                    ....
0000000: 00000000 00101011 00000000 00001101 00001010           .+...
0000000: 00000000 01110010 00000000 00101000                    .r.(

Son archivos de 4 bytes. También he visto uno de 5.
Aún por descifrar

Desconocidas:
.fat -> 
.cmt -> archivo derivado de crear la animación
.hex -> archivo derivado de crear la animación, posiblemente lo que se envía por puerto serie al panel de leds


== Animaciones ==
Cuando se crea una animación y se guarda se crea un archivo .atr junto a un montón de archivos .hex ordenados por número y un archivo datos.cmt.


== Protocolo serie ==

TBD
